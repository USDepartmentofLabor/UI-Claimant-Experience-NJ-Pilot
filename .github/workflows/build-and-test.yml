on:
  pull_request:
  push:
    branches:
      - main

# Cancel redundant builds on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

name: Test and Lint
jobs:
  lint-build-and-test:
    name: Lint, build, and test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          key: v1-pre-commit-dot-cache-${{ hashFiles('.pre-commit-config.yaml') }}
          path: ~/.cache/pre-commit

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Lint
        run: make lint

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.2.0
          cache: "yarn"
          cache-dependency-path: "client/yarn.lock"

      - name: Install dependencies
        run: make client-deps-ci

      - name: Check Typescript compilation
        run: make client-compile-check

      - name: Run Jest tests
        run: make client-test

  docker-build:
    name: Docker build and push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dol-ui-claimant-intake-client-dev
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
