name: Run Deployment Preview
description: This action returns a boolean on whether the deployment preview meets the necessary requirements, aside from it's ability to pass Test and Lint.
outputs:
  run-deployment-preview:
    description: A boolean value whether to build and deploy a preview environment
    value: ${{ steps.set-output.outputs.run-deployment-preview }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Get s3 schema file change
      id: s3-schema-file
      uses: tj-actions/changed-files@v35
      with:
        files: server/src/main/resources/schemas/**

    - name: Echo changed s3 schema files
      run: |
        for file in ${{ steps.s3-schema-file.outputs.all_changed_and_modified_files }}; do
          echo "$file was added or modified"
        done
      shell: bash

    - name: Check PR changes does not include s3 claim schema files
      id: s3-claim-schema
      if: steps.s3-schema-file.outputs.any_changed == 'true'
      run: echo "RUN_DEPLOYMENT_PREVIEW=false" >> $GITHUB_ENV
      shell: bash

    - name: Get DB schema file change
      id: db-schema-file
      uses: tj-actions/changed-files@v35
      with:
        files: server/src/main/resources/db/**

    - name: Echo changed db schema files
      run: |
        for file in ${{ steps.db-schema-file.outputs.all_changed_and_modified_files }}; do
          echo "$file was added or modified"
        done
      shell: bash

    - name: Check PR changes does not include rds db schema files
      id: db-schema
      if: steps.db-schema-file.outputs.any_changed == 'true'
      run: echo "RUN_DEPLOYMENT_PREVIEW=false" >> $GITHUB_ENV
      shell: bash

    - name: Get Codeowners file
      id: codeowners
      run: |
        echo 'CODEOWNERS<<EOF' >> $GITHUB_ENV
        cat .github/CODEOWNERS | grep -o '@\w*' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      shell: bash

    - name: Echo changed CODEOWNERS file
      run: echo "CODEOWNERS list ${{ env.CODEOWNERS }}"
      shell: bash

    - name: Echo actor
      run: echo "github actor ${{ github.actor }}"
      shell: bash

    - name: Check PR owner has deployment preview permission
      id: privileges
      if: "!contains( env.CODEOWNERS, github.actor )"
      run: echo "RUN_DEPLOYMENT_PREVIEW=false" >> $GITHUB_ENV
      shell: bash

    - name: Echo PR description does not include deployment preview flag
      run: echo "Does not include dp flag ${{ !contains( github.event.pull_request.body, '[x] Deploy Preview Environment') }}"
      shell: bash

    - name: Check PR description includes deployment preview flag
      id: dp-flag
      if: "!contains( github.event.pull_request.body, '[x] Deploy Preview Environment')"
      run: echo "RUN_DEPLOYMENT_PREVIEW=false" >> $GITHUB_ENV
      shell: bash

    - name: Comment DP will be created
      uses: peter-evans/create-or-update-comment@v2
      if: env.RUN_DEPLOYMENT_PREVIEW == 'true'
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: Deployment Preview will be created for this PR at ${{ github.sha }}

    - name: Comment DP will not be created
      uses: peter-evans/create-or-update-comment@v2
      if: env.RUN_DEPLOYMENT_PREVIEW == 'false'
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: Deployment Preview will not be created for this PR at ${{ github.sha }}

    - name: Set env value to output
      id: set-output
      run: echo "run-deployment-preview=$RUN_DEPLOYMENT_PREVIEW" >> $GITHUB_OUTPUT
      shell: bash
