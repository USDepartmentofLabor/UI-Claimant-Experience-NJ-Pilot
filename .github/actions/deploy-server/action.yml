name: Deploy Server
description: Deploy the backend server application
inputs:
  deploy-env:
    description: The environment being deployed (e.g., dev, test, prod)
    required: true
  aws-role-to-assume:
    description: The AWS role to assume
    required: true
  server-image:
    description: The server image to deploy
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984
      with:
        python-version: "3.10"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@9149ade017c57f86dea2f76a01f8b2d5bd06b10f

    - name: Set environment name in ECS task definition template
      shell: bash
      run: |
        make server-task-definition environment=${{ inputs.deploy-env }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@374ee96751fffe528c09b5f427848da60469bb55
      with:
        task-definition: ops/ecs/server-task-definition.json
        container-name: dol-ui-claimant-intake-server-${{ inputs.deploy-env }}
        image: ${{ inputs.server-image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@3cc43061dd30ad47511af35bca46e2c1435b9035
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: dol-ui-claimant-intake-server
        cluster: dol-ui-claimant-intake-${{ inputs.deploy-env }}
        wait-for-service-stability: true
