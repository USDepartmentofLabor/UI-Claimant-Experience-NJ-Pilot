name: Deploy Server
description: Deploy the backend server application
inputs:
  deploy-env:
    description: The environment being deployed (e.g., dev, test, prod)
    required: true
  aws-role-to-assume:
    description: The AWS role to assume
    required: true
  server-image:
    description: The server image to deploy
    required: true
  image-tag:
    description: The tag for the server image to deploy
    required: true
  db-migrations-subnet:
    description: The subnet to run db migrations in
    required: true
  db-migrations-security-group:
    description: The security group for use by db migration tasks
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
      with:
        python-version: "3.10"

    - name: Install python dependencies
      shell: bash
      run: pip install -r requirements-ci.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838
      with:
        role-to-assume: ${{ inputs.aws-role-to-assume }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be

    - name: Set environment name in ECS task definition template (migrations)
      shell: bash
      run: |
        make db-migrations-task-definition environment=${{ inputs.deploy-env }}

    - name: Fill in the new image ID in the Amazon ECS task definition (migrations)
      id: task-def-migrations
      uses: aws-actions/amazon-ecs-render-task-definition@f15ed65f9cc12455139db0f8e8ff6f6aaad6dfda
      with:
        task-definition: ops/ecs/db-migrations-task-definition.json
        container-name: dol-ui-claimant-intake-db-migrate-${{ inputs.deploy-env }}
        image: ${{ inputs.server-image }}

    - name: Deploy Amazon ECS task definition (migrations)
      id: deploy-task-def-migrations
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def-migrations.outputs.task-definition }}
        cluster: dol-ui-claimant-intake-${{ inputs.deploy-env }}

    - name: Snapshot RDS
      shell: bash
      env:
        RDS_INSTANCE: dol-ui-claimant-intake-${{ inputs.deploy-env }}
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        scripts/snapshot-rds.sh

    - name: Run DB migrations ECS task
      env:
        TASK_DEFINITION: ${{ steps.deploy-task-def-migrations.outputs.task-definition-arn }}
        SUBNET: ${{ inputs.db-migrations-subnet }}
        SECURITY_GROUP: ${{ inputs.db-migrations-security-group }}
      shell: bash
      run: |
        python scripts/run-db-migrations-task.py \
          --taskdef "$TASK_DEFINITION" \
          --cluster dol-ui-claimant-intake-${{ inputs.deploy-env }} \
          --subnet "$SUBNET" \
          --sg "$SECURITY_GROUP"

    - name: Set environment name in ECS task definition template (server)
      shell: bash
      run: |
        make server-task-definition environment=${{ inputs.deploy-env }}

    - name: Fill in the new image ID in the Amazon ECS task definition (server)
      id: task-def-server
      uses: aws-actions/amazon-ecs-render-task-definition@f15ed65f9cc12455139db0f8e8ff6f6aaad6dfda
      with:
        task-definition: ops/ecs/server-task-definition.json
        container-name: dol-ui-claimant-intake-server-${{ inputs.deploy-env }}
        image: ${{ inputs.server-image }}

    - name: Deploy Amazon ECS task definition (server)
      uses: aws-actions/amazon-ecs-deploy-task-definition@df9643053eda01f169e64a0e60233aacca83799a
      with:
        task-definition: ${{ steps.task-def-server.outputs.task-definition }}
        service: dol-ui-claimant-intake-server
        cluster: dol-ui-claimant-intake-${{ inputs.deploy-env }}
        wait-for-service-stability: true
